<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.losgai.sys.mapper.RentalOrderMapper">

    <resultMap id="BaseResultMap" type="com.losgai.sys.entity.carRental.RentalOrder">
            <id property="id" column="id" />
            <result property="userId" column="user_id" />
            <result property="carId" column="car_id" />
            <result property="startRentalTime" column="start_rental_time" />
            <result property="endRentalTime" column="end_rental_time" />
            <result property="price" column="price" />
            <result property="address" column="address" />
            <result property="status" column="status" />
            <result property="score" column="score" />
            <result property="createTime" column="create_time" />
            <result property="updateTime" column="update_time" />
            <result property="deleted" column="deleted" />
    </resultMap>

    <sql id="Base_Column_List">
        id,user_id,car_id,start_rental_time,end_rental_time,price,address
        status,score,create_time,update_time,deleted
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from rental_order
        where  id = #{id} 
    </select>

    <select id="findFutureBookingsByCarId" resultType="com.losgai.sys.dto.BookingSlot">
        SELECT
        start_rental_time as startRentalTime,
        end_rental_time as endRentalTime
        FROM
        rental_order
        WHERE
        car_id = #{carId}
        -- 1. 过滤掉逻辑删除的订单
        AND deleted = 0
        -- 2. 只查询“已支付”或“租赁中”的订单
        AND status IN (1, 2)
        -- 3. 关键逻辑：筛选出与【今天, 今天+60天】这个时间窗口有交集的订单
        AND start_rental_time &lt;= DATE_ADD(CURDATE(), INTERVAL 60 DAY)
        AND end_rental_time &gt;= CURDATE()
        ORDER BY
        start_rental_time
    </select>

    <select id="query" resultType="com.losgai.sys.vo.ShowOrderVo">
        select
        ro.id as id,
        ro.user_id as userId,
        u.username as username,
        ro.car_id as carId,
        c.name as carName,
        c.images as carImage,
        ro.start_rental_time as startTime,
        ro.end_rental_time as endTime,
        ro.price as price,
        ro.address as address,
        ro.status as status,
        ro.score as score,
        ro.create_time as createTime,
        ro.update_time as updateTime
        from
        rental_order ro
        left join
        car c on ro.car_id = c.id
        left join
        user u on ro.user_id = u.id
        <where>
            <!-- 基础过滤条件 -->
            ro.deleted = 0
            <if test="keyWord != null and keyWord.trim() != ''">
                and (u.username like concat('%', #{keyWord, jdbcType=VARCHAR}, '%')
                or c.name like concat('%', #{keyWord, jdbcType=VARCHAR}, '%'))
            </if>
            <!-- 查找与 [startDate, endDate] 时间范围有交集的订单 -->
            <if test="startDate != null">
                and ro.end_rental_time &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                and ro.start_rental_time &lt;= #{endDate}
            </if>
            <if test="status != null">
                and ro.status = #{status}
            </if>
        </where>
    </select>

    <select id="userQuery" resultType="com.losgai.sys.vo.ShowOrderVo">
        select
        ro.id as id,
        ro.user_id as userId,
        u.username as username,
        ro.car_id as carId,
        c.name as carName,
        c.images as carImage,
        ro.start_rental_time as startTime,
        ro.end_rental_time as endTime,
        ro.price as price,
        ro.address as address,
        ro.status as status,
        ro.score as score,
        ro.create_time as createTime,
        ro.update_time as updateTime
        from
        rental_order ro
        left join
        car c on ro.car_id = c.id
        left join
        user u on ro.user_id = u.id
        <where>
            <!-- 基础过滤条件 -->
            ro.deleted = 0
            and ro.user_id = #{userId}
            <if test="keyWord != null and keyWord.trim() != ''">
                and (u.username like concat('%', #{keyWord, jdbcType=VARCHAR}, '%')
                or c.name like concat('%', #{keyWord, jdbcType=VARCHAR}, '%'))
            </if>
            <!-- 查找与 [startDate, endDate] 时间范围有交集的订单 -->
            <if test="start != null">
                and ro.end_rental_time &gt;= #{start}
            </if>
            <if test="end != null">
                and ro.start_rental_time &lt;= #{end}
            </if>
            <if test="status != null">
                and ro.status = #{status}
            </if>
        </where>
    </select>

    <update id="deleteByPrimaryKey" parameterType="java.lang.Long">
        update rental_order
        set deleted = 1
        where id = #{id}
    </update>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.losgai.sys.entity.carRental.RentalOrder" useGeneratedKeys="true">
        insert into rental_order
        ( id,user_id,car_id,start_rental_time,end_rental_time,price,address,
        status,score,create_time,update_time,deleted)
        values (#{id},#{userId},#{carId},#{startRentalTime},#{endRentalTime},#{price},#{address},
        #{status},#{score},#{createTime},#{updateTime},#{deleted})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.losgai.sys.entity.carRental.RentalOrder" useGeneratedKeys="true">
        insert into rental_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="userId != null">user_id,</if>
                <if test="carId != null">car_id,</if>
                <if test="startRentalTime != null">start_rental_time,</if>
                <if test="endRentalTime != null">end_rental_time,</if>
                <if test="price != null">price,</if>
            <if test="address != null">address,</if>
                <if test="status != null">status,</if>
                <if test="score != null">score,</if>
                <if test="createTime != null">create_time,</if>
                <if test="updateTime != null">update_time,</if>
                <if test="deleted != null">deleted,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id},</if>
                <if test="userId != null">#{userId},</if>
                <if test="carId != null">#{carId},</if>
                <if test="startRentalTime != null">#{startRentalTime},</if>
                <if test="endRentalTime != null">#{endRentalTime},</if>
                <if test="price != null">#{price},</if>
            <if test="address != null">#{address},</if>
                <if test="status != null">#{status},</if>
                <if test="score != null">#{score},</if>
                <if test="createTime != null">#{createTime},</if>
                <if test="updateTime != null">#{updateTime},</if>
                <if test="deleted != null">#{deleted},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.losgai.sys.entity.carRental.RentalOrder">
        update rental_order
        <set>
                <if test="userId != null">
                    user_id = #{userId},
                </if>
                <if test="carId != null">
                    car_id = #{carId},
                </if>
                <if test="startRentalTime != null">
                    start_rental_time = #{startRentalTime},
                </if>
                <if test="endRentalTime != null">
                    end_rental_time = #{endRentalTime},
                </if>
                <if test="price != null">
                    price = #{price},
                </if>
            <if test="address != null">
                    address = #{address},
                </if>
                <if test="status != null">
                    status = #{status},
                </if>
                <if test="score != null">
                    score = #{score},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime},
                </if>
                <if test="updateTime != null">
                    update_time = #{updateTime},
                </if>
                <if test="deleted != null">
                    deleted = #{deleted},
                </if>
        </set>
        where   id = #{id} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.losgai.sys.entity.carRental.RentalOrder">
        update rental_order
        set 
            user_id =  #{userId},
            car_id =  #{carId},
            start_rental_time =  #{startRentalTime},
            end_rental_time =  #{endRentalTime},
            price =  #{price},
            address =  #{address},
            status =  #{status},
            score =  #{score},
            create_time =  #{createTime},
            update_time =  #{updateTime},
            deleted =  #{deleted}
        where   id = #{id} 
    </update>

    <update id="cancelOrder">
        update rental_order
        set status = 4
        where deleted = 0
        and status = 0
        and id = #{id}
    </update>
</mapper>
